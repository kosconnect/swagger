openapi: 3.0.0
info:
  title: KosConnect
  version: 1.0.0

servers:
  - url: https://kosconnect-server.vercel.app

components:
  securitySchemes: 
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

tags:
  - name: auth
  - name: users
  - name: category
  - name: facility
  - name: customFacility
  - name: boardingHouse
  - name: room
  - name: transaction
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                email:
                  type: string
                role:
                  type: string
                password:
                  type: string
              example:
                fullname: Siti
                email: skresmiamenun@gmail.com
                role: user
                password: bundania123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /auth/login:
    post:
      tags:
        - auth
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: fathyapremium@gmail.com
                password: fathya123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/users/:
    get:
      tags:
        - users
      summary: Get all users
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/users/{id}:
    get:
      tags:
        - users
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    put:
      tags:
        - users
      summary: Update user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                email:
                  type: string
              example:
                fullname: Fathya Fathimah
                email: 714220012@std.ulbi.ac.id
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - users
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/users/me:
    get:
      tags:
        - users
      summary: Get user detail
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/users/{id}/role:
    put:
      tags:
        - users
      summary: Update user role by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
              example:
                role: user
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/users/owner:
    get:
      tags:
        - users
      summary: Get all owner
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/categories/:
    post:
      tags:
        - category
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example: 
                name: Kos Keluarga
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - category
      summary: Get all category
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/categories/{id}:
    get:
      tags:
        - category
      summary: Get category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    put:
      tags:
        - category
      summary: Update category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              example:
                name: Kos Pria
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - category
      summary: Delete category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/facility/:
    post:
      tags:
        - facility
      summary: Create a new facility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
              example:
                name: Rooftop
                type: boarding_house
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - facility
      summary: Get all facility
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/facility/{id}:
    get:
      tags:
        - facility
      summary: Get facility by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    put:
      tags:
        - facility
      summary: Update facility by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
              example:
                name: Rooftop di Lantai 4
                type: boarding_house
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - facility
      summary: Delete facility by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/facility/type:
    get:
      tags:
        - facility
      summary: Get facility by type
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
          example: boarding_house
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
            
  /api/customFacilities/:
    post:
      tags:
        - customFacility
      summary: Create a new custom facility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
                owner_id:
                  type: string
              example:
                name: Makan Siang dari Warteg Bahari
                price: 300000
                owner_id: 676c161877951c4ae20534fa
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - customFacility
      summary: Get all custom facility
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/customFacilities/{id}:
    get:
      tags:
        - customFacility
      summary: Get custom facility by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - customFacility
      summary: Update custom facility by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
              example:
                name: Listrik Rice Cooker
                price: 30000
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    
    delete:
      tags:
        - customFacility
      summary: Delete custom facility by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/customFacilities/admin:
    get:
      tags:
        - customFacility
      summary: Get all custom facility by admin
      parameters:
        - name: owner_id
          in: query
          required: true
          schema:
            type: string
          example: 676c161877951c4ae20534fa
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/customFacilities/owner:
    get:
      tags:
        - customFacility
      summary: Get all custom facility by owner
      parameters:
        - name: owner_id
          in: query
          required: true
          schema:
            type: string
          example: 676c161877951c4ae20534fa
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses/:
    post:
      tags:
        - boardingHouse
      summary: Create a new boarding house
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Kos Karina
                address:
                  type: string
                  example: Jl. Kwangya
                category_id:
                  type: string
                  example: 6782a4a3ce3fab5e128cf500
                description:
                  type: string
                  example: Lokasi Strategis, Dekat dengan kampus
                rules:
                  type: string
                  example: Piket seminggu sekali
                facilities_id:
                  items:
                    type: string
                  example: ["679d31601c7dbc4fe53fd90f","679fbd39710193d32f39c4c9","67829f775e49e3a9bdd02399"]
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    get:
      tags:
        - boardingHouse
      summary: Get all boarding house
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses/{id}:
    put:
    tags:
      - boardingHouse
    summary: Update boarding house by ID
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        example: 60dff4b2c130d8246c76a3a4
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Kos Karina Baru
              address:
                type: string
                example: Jl. Kwangya No. 10
              category_id:
                type: string
                example: 6782a4a3ce3fab5e128cf500
              description:
                type: string
                example: Lokasi lebih strategis dan fasilitas lengkap
              rules:
                type: string
                example: Piket seminggu sekali, jaga kebersihan
              facilities_id:
                type: array
                items:
                  type: string
                example: 
                  - "679d31601c7dbc4fe53fd90f"
                  - "679fbd39710193d32f39c4c9"
                  - "67829f775e49e3a9bdd02399"
              images:
                type: array
                items:
                  type: string
                  format: binary
    responses:
      "200":
        description: Successful response for updating boarding house
        content:
          application/json: 
    get:
      tags:
        - boardingHouse
      summary: /api/boardingHouses/:id
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - boardingHouse
      summary: Delete boarding house by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses/{id}/detail:
    get:
      tags:
        - boardingHouse
      summary: Get boarding house detail 
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses/owner:
    get:
      tags:
        - boardingHouse
      summary: Get boarding house by owner
      parameters:
        - name: owner_id
          in: query
          required: true
          schema:
            type: string
          example: 676c161877951c4ae20534fa
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}:
    post:
      tags:
        - room
      summary:  Create room by ID
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_type:
                  type: string
                  example: Studio
                size:
                  type: string
                  example: 5x5 meter
                price_semi_annual:
                  type: integer
                  example: 7000000
                room_facilities:
                  type: string
                  example: '["67829f0ace229812a4bade28", "6782a0455e49e3a9bdd023a0",
                    "6782a05a5e49e3a9bdd023a1"]'
                custom_facilities:
                  type: string
                  example: '["679fc2938ce2a6af5720b149", "679fc7038784cd291588d882"]'
                number_available:
                  type: integer
                  example: 5
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                price_yearly:
                  type: integer
                  example: 13000000
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    get:
      tags:
        - room
      summary: Get room by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    put:
      tags:
        - room
      summary: Update room by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_type:
                  type: string
                  example: Studio
                size:
                  type: string
                  example: 5x5 meter
                price_semi_annual:
                  type: integer
                  example: 7000000
                room_facilities:
                  type: string
                  example: '["67829f0ace229812a4bade28", "6782a0455e49e3a9bdd023a0",
                    "6782a05a5e49e3a9bdd023a1"]'
                custom_facilities:
                  type: string
                  example: '["679fc2938ce2a6af5720b149", "679fc7038784cd291588d882"]'
                number_available:
                  type: integer
                  example: 5
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                price_yearly:
                  type: integer
                  example: 13000000
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    delete:
      tags:
        - room
      summary: Delete room by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
          application/json: {}
    
  /api/rooms/:
    get:
      tags:
        - room
      summary: Get all rooms
      responses:
        "200":
          description: Successful response
          content:
          application/json: {}

  /api/rooms/boarding-house/{id}:
    get:
      tags:
        - room
      summary: Get room by boarding house ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/rooms/home:
    get:
      tags:
        - room
      summary: Get all rooms by home
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}/pages:
    get:
      tags:
        - room
      summary: Get room by pages
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}/detail:
    get:
      tags:
        - room
      summary: Get room detail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

  /api/transaction/:
    post:
      tags:
        - transaction
      summary: /api/transaction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                personal_info:
                  full_name: Fathya Fathimah Azzahra
                  email: 714220012@std.ulbi.ac.id
                  phone_number: "+6285759043680"
                custom_facilities:
                  - 679fc2938ce2a6af5720b149
                  - 679fc7038784cd291588d882
                  - 67827a8de860b172001d60a6
                payment_term: semi_annual
                check_in_date: "2025-02-05"
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjQ5ODUsImlhdCI6MTczODUzODU4NSwicm9sZSI6InVzZXIiLCJ1c2VyX2lkIjoiNjc4NTRhMjllNGI3YTE5ODg2YmZkYmNkIn0.im1ECSYzT4igkdhFy7PJpdajoiaNnG3HEaKIbaeSkDU
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: room_id
          in: query
          schema:
            type: string
          example: 679ff9a92dd7df11b3a089ad
        - name: boarding_house_id
          in: query
          schema:
            type: string
          example: 679fc9e68784cd291588d883
        - name: owner_id
          in: query
          schema:
            type: string
          example: 676c161877951c4ae20534fa
        - name: user_id
          in: query
          schema:
            type: string
          example: 67854a29e4b7a19886bfdbcd
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/transaction/user:
    get:
      tags:
        - transaction
      summary: /api/transaction/user
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjQ5ODUsImlhdCI6MTczODUzODU4NSwicm9sZSI6InVzZXIiLCJ1c2VyX2lkIjoiNjc4NTRhMjllNGI3YTE5ODg2YmZkYmNkIn0.im1ECSYzT4igkdhFy7PJpdajoiaNnG3HEaKIbaeSkDU
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /transactions/679fff6e2dd7df11b3a089b1/payment:
    post:
      tags:
        - transaction
      summary: /transactions/:id/payment
      requestBody:
        content: {}
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjQ5ODUsImlhdCI6MTczODUzODU4NSwicm9sZSI6InVzZXIiLCJ1c2VyX2lkIjoiNjc4NTRhMjllNGI3YTE5ODg2YmZkYmNkIn0.im1ECSYzT4igkdhFy7PJpdajoiaNnG3HEaKIbaeSkDU
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/transaction/owner:
    get:
      tags:
        - transaction
      summary: /api/transaction/owner
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjU1NTYsImlhdCI6MTczODUzOTE1Niwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.JNFHNkIObDtonQoXNTHHDz40lYHiFGFz-oSLajUOSKQ
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/transaction:
    get:
      tags:
        - transaction
      summary: /api/transaction
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjU2NTcsImlhdCI6MTczODUzOTI1Nywicm9sZSI6ImFkbWluIiwidXNlcl9pZCI6IjY3ODM1MTgyZTUxYWU2MmM1ZTA1MzBjOCJ9.zlKEmNFhTmItmLxFExq-IhLWVJjyF_pPovOHpOSF9Rc
        - name: ""
          in: header
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/transaction/679fff6e2dd7df11b3a089b1:
    get:
      tags:
        - transaction
      summary: /api/transaction/:id
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjQ5ODUsImlhdCI6MTczODUzODU4NSwicm9sZSI6InVzZXIiLCJ1c2VyX2lkIjoiNjc4NTRhMjllNGI3YTE5ODg2YmZkYmNkIn0.im1ECSYzT4igkdhFy7PJpdajoiaNnG3HEaKIbaeSkDU
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/transaction/admin/user/67854a29e4b7a19886bfdbcd:
    get:
      tags:
        - transaction
      summary: /api/transaction/admin/user/:userId
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjU2NTcsImlhdCI6MTczODUzOTI1Nywicm9sZSI6ImFkbWluIiwidXNlcl9pZCI6IjY3ODM1MTgyZTUxYWU2MmM1ZTA1MzBjOCJ9.zlKEmNFhTmItmLxFExq-IhLWVJjyF_pPovOHpOSF9Rc
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/transaction/admin/owner/676c161877951c4ae20534fa:
    get:
      tags:
        - transaction
      summary: /api/transaction/admin/owner/:ownerId
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjU2NTcsImlhdCI6MTczODUzOTI1Nywicm9sZSI6ImFkbWluIiwidXNlcl9pZCI6IjY3ODM1MTgyZTUxYWU2MmM1ZTA1MzBjOCJ9.zlKEmNFhTmItmLxFExq-IhLWVJjyF_pPovOHpOSF9Rc
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/transaction/678e7c7da5daee71bdf879e4:
    delete:
      tags:
        - transaction
      summary: /api/transaction/:id
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjU2NTcsImlhdCI6MTczODUzOTI1Nywicm9sZSI6ImFkbWluIiwidXNlcl9pZCI6IjY3ODM1MTgyZTUxYWU2MmM1ZTA1MzBjOCJ9.zlKEmNFhTmItmLxFExq-IhLWVJjyF_pPovOHpOSF9Rc
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
