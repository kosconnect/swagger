openapi: 3.0.0
openapi: 3.0.0
info:
  title: kosconnect
  version: 1.0.0
servers:
  - url: https://kosconnect-server.vercel.app
  - url: http://kosconnect-server.vercel.app

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fullname: Siti
                email: skresmiamenun@gmail.com
                role: user
                password: bundania123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: fathyapremium@gmail.com
                password: fathya123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/{id}:
    put:
      security:
        - BearerAuth: []
      tags:
        - users
      summary: Update user by ID
      description: Update user data using PUT request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fullname: Fathya Fathimah
                email: 714220012@std.ulbi.ac.id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

    delete:
      security:
        - BearerAuth: []
      tags:
        - users
      summary: Delete user by ID
      description: Delete a user.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/users/me:
    get:
      security:
        - BearerAuth: []
      tags:
        - users
      summary: Get current user
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/users:
    get:
      security:
        - BearerAuth: []
      tags:
        - users
      summary: Get all users
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/users/{id}/role:
    put:
      security:
        - BearerAuth: []
      tags:
        - users
      summary: Update user role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                role: user
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/categories:
  post:
    tags:
      - category
    summary: Create a new category
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              name: Kos Keluarga
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  get:
    tags:
      - category
    summary: Get all categories
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  put:
    security:
      - BearerAuth: []
    tags:
      - category
    summary: Update an existing category
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              name: Kos Pria
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  delete:
    security:
      - BearerAuth: []
    tags:
      - category
    summary: Delete a category
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  /api/categories/{id}:
    get:
      tags:
        - category
      summary: Get category by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

    put:
      security:
        - BearerAuth: []
      tags:
        - category
      summary: Update category by ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Kos Pria
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

    delete:
      security:
        - BearerAuth: []
      tags:
        - category
      summary: Delete category by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
 /api/facility:
  post:
    security:
      - BearerAuth: []
    tags:
      - facility
    summary: Create a new facility
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              name: Rooftop
              type: boarding_house
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  get:
    security:
      - BearerAuth: []
    tags:
      - facility
    summary: Get all facilities
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  /api/facility/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - facility
      summary: Get facility by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

    put:
      security:
        - BearerAuth: []
      tags:
        - facility
      summary: Update facility by ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Rooftop di Lantai 4
                type: boarding_house
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

    delete:
      security:
        - BearerAuth: []
      tags:
        - facility
      summary: Delete facility by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/facility/type:
    get:
      security:
        - BearerAuth: []
      tags:
        - facility
      summary: Get facilities by type (e.g., boarding_house)
      parameters:
        - name: type
          in: query
          schema:
            type: string
          example: boarding_house
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/customFacilities:
  post:
    security:
      - BearerAuth: []
    tags:
      - customFacility
    summary: Create a new custom facility by admin
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              name: Makan Siang dari Warteg Bahari
              price: 300000
              owner_id: 676c161877951c4ae20534fa
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  get:
    security:
      - BearerAuth: []
    tags:
      - customFacility
    summary: Get custom facilities by owner
    parameters:
      - name: Authorization
        in: header
        schema:
          type: string
        example: >-
          Bearer
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MDk2MDQsImlhdCI6MTczODUyMzIwNCwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.hKd7QcO-haqWRuuu1_gVdfteBdnbirmBttwCXx-EC9k
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  /api/customFacilities/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - customFacility
      summary: Get custom facility by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

    put:
      security:
        - BearerAuth: []
      tags:
        - customFacility
      summary: Update custom facility by ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Listrik Rice Cooker
                price: 30000
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/customFacilities/admin/:
    get:
      security:
        - BearerAuth: []
      tags:
        - customFacility
      summary: Get custom facilities by admin based on owner_id
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjU2NTcsImlhdCI6MTczODUzOTI1Nywicm9sZSI6ImFkbWluIiwidXNlcl9pZCI6IjY3ODM1MTgyZTUxYWU2MmM1ZTA1MzBjOCJ9.zlKEmNFhTmItmLxFExq-IhLWVJjyF_pPovOHpOSF9Rc
        - name: owner_id
          in: query
          schema:
            type: string
          example: 676c161877951c4ae20534fa
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/customFacilities/{id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - customFacility
      summary: Delete custom facility by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/boardingHouses:
  post:
    security:
      - BearerAuth: []
    tags:
      - boardingHouse
    summary: Create a new boarding house by Owner
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Kos Karina
              address:
                type: string
                example: Jl. Kwangya
              category_id:
                type: string
                example: 6782a4a3ce3fab5e128cf500
              description:
                type: string
                example: Lokasi Strategis, Dekat dengan kampus
              rules:
                type: string
                example: Piket seminggu sekali
              facilities:
                type: string
                example: >-
                  ["679d31601c7dbc4fe53fd90f", "679fbd39710193d32f39c4c9", "67829f775e49e3a9bdd02399"]
              images:
                type: string
                format: binary
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

  /api/boardingHouses/{id}:
    put:
      security:
        - BearerAuth: []
      tags:
        - boardingHouse
      summary: Update a boarding house by ID
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Kos Naevis
                address:
                  type: string
                  example: >-
                    Jl. Soomantri No.30, Sarijadi, Kec. Sukasari, Kota Bandung,
                    Jawa Barat 40151
                description:
                  type: string
                  example: Terdapat petugas kebersihan yang bertugas seminggu sekali
                rules:
                  type: string
                  example: Tidak Boleh Membawa Teman Laki-Laki Menginap
                category_id:
                  type: string
                  example: 6782a4a3ce3fab5e128cf500
                facilities:
                  type: string
                  example: >-
                    ["67829f2f5e49e3a9bdd02394", "67829f375e49e3a9bdd02395", "67829f475e49e3a9bdd02396"]
                images:
                  type: string
                  format: binary
                owner_id:
                  type: string
                  example: 676c161877951c4ae20534fa
    responses:
      '200':
        description: Successful response
        content:
          application/json: {}

    get:
      security:
        - BearerAuth: []
      tags:
        - boardingHouse
      summary: Get details of a boarding house by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses:
    get:
      security:
        - BearerAuth: []
      tags:
        - boardingHouse
      summary: Get all boarding houses
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses/{id}/detail:
    get:
      security:
        - BearerAuth: []
      tags:
        - boardingHouse
      summary: Get detailed information about a boarding house by ID
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzQ5MzY1NDQsInJvbGUiOiJ1c2VyIiwidXNlcl9pZCI6IjY3NjdiNDg5MWMwY2YyOTgwYzlkOGI4NCJ9.ymwmpFSUx2H80dgzYMYPsOZ2CrIlUhHfY0DNeWF0Uag
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses/owner:
    get:
      security:
        - BearerAuth: []
      tags:
        - boardingHouse
      summary: Get all boarding houses of an owner
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjQzNzUsImlhdCI6MTczODUzNzk3NSwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.t86VBuYS-QOohJawh5nVnOQAf3sBkMul7xfJdOXU0xQ
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/boardingHouses/{id}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - boardingHouse
      summary: Delete a boarding house by ID
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MDk2MDQsImlhdCI6MTczODUyMzIwNCwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.hKd7QcO-haqWRuuu1_gVdfteBdnbirmBttwCXx-EC9k
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
/api/rooms/{boardingHouseID}:
    post:
      tags:
        - room
      summary: Add a room to the boarding house
      security:
        - /api/rooms/679fc9e68784cd291588d883:
    post:
      tags:
        - room
      summary: Add a room to the boarding house
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_type:
                  type: string
                  example: Studio
                size:
                  type: string
                  example: 5x5 meter
                price_semi_annual:
                  type: integer
                  example: '7000000'
                room_facilities:
                  type: string
                  example: >-
                    ["67829f0ace229812a4bade28", "6782a0455e49e3a9bdd023a0", "6782a05a5e49e3a9bdd023a1"]
                custom_facilities:
                  type: string
                  example: '["679fc2938ce2a6af5720b149", "679fc7038784cd291588d882"]'
                number_available:
                  type: integer
                  example: '5'
                images:
                  type: string
                  format: binary
                price_yearly:
                  type: integer
                  example: '13000000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}:
    put:
      tags:
        - room
      summary: Update a room
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_type:
                  type: string
                  example: Studio
                size:
                  type: string
                  example: 5 x 5 meter
                price_quarterly:
                  type: integer
                  example: '4000000'
                room_facilities:
                  type: string
                  example: >-
                    ["67829f0ace229812a4bade28", "6782a0455e49e3a9bdd023a0", "6782a05a5e49e3a9bdd023a1"]
                custom_facilities:
                  type: string
                  example: >-
                    ["679fc2938ce2a6af5720b149", "679fc7038784cd291588d882", "67827a8de860b172001d60a6"]
                status:
                  type: string
                  example: available
                number_available:
                  type: integer
                  example: '6'
                images:
                  type: string
                  format: binary
                price_yearly:
                  type: integer
                  example: '13000000'
                price_semi_annual:
                  type: integer
                  example: '7000000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/:
    get:
      tags:
        - room
      summary: Get all rooms
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}:
    get:
      tags:
        - room
      summary: Get a room by ID
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjM1OTksImlhdCI6MTczODUzNzE5OSwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.IEkrSIiQEsA6nVKbuIYgcUq1se11fwbzuIA81p1GKSM
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/boarding-house/{boardingHouseID}:
    get:
      tags:
        - room
      summary: Get rooms by boarding house ID
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjM1OTksImlhdCI6MTczODUzNzE5OSwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.IEkrSIiQEsA6nVKbuIYgcUq1se11fwbzuIA81p1GKSM
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/home:
    get:
      tags:
        - room
      summary: Get home rooms
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}/pages:
    get:
      tags:
        - room
      summary: Get room pages
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}/detail:
    get:
      tags:
        - room
      summary: Get room details
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjM1OTksImlhdCI6MTczODUzNzE5OSwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.IEkrSIiQEsA6nVKbuIYgcUq1se11fwbzuIA81p1GKSM
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/rooms/{id}:
    delete:
      tags:
        - room
      summary: Delete a room
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mzg2MjM1OTksImlhdCI6MTczODUzNzE5OSwicm9sZSI6Im93bmVyIiwidXNlcl9pZCI6IjY3NmMxNjE4Nzc5NTFjNGFlMjA1MzRmYSJ9.IEkrSIiQEsA6nVKbuIYgcUq1se11fwbzuIA81p1GKSM
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}BE: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_type:
                  type: string
                  example: Studio
                size:
                  type: string
                  example: 5x5 meter
                price_semi_annual:
                  type: integer
                  example: '7000000'
                room_facilities:
                  type: string
                  example: >-
                    ["67829f0ace229812a4bade28", "6782a0455e49e3a9bdd023a0", "6782a05a5e49e3a9bdd023a1"]
                custom_facilities:
                  type: string
                  example: '["679fc2938ce2a6af5720b149", "679fc7038784cd291588d882"]'
                number_available:
                  type: integer
                  example: '5'
                images:
                  type: string
                  format: binary
                price_yearly:
                  type: integer
                  example: '13000000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/transaction/:
    post:
      tags:
        - transaction
      summary: Create a new transaction
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                personal_info:
                  full_name: Fathya Fathimah Azzahra
                  email: 714220012@std.ulbi.ac.id
                  phone_number: '+6285759043680'
                custom_facilities:
                  - 679fc2938ce2a6af5720b149
                  - 679fc7038784cd291588d882
                payment_term: semi_annual
                check_in_date: '2025-02-05'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
            example: 'Bearer <token>'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/transaction/user:
    get:
      tags:
        - transaction
      summary: Get transactions for a user
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/transaction/admin/user/{userId}:
    get:
      tags:
        - transaction
      summary: Get transaction details for a specific user (Admin Only)
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: 67854a29e4b7a19886bfdbcd
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/transaction/admin/owner/{ownerId}:
    get:
      tags:
        - transaction
      summary: Get transaction details for a specific owner (Admin Only)
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
          example: 676c161877951c4ae20534fa
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/transaction/{transactionId}:
    get:
      tags:
        - transaction
      summary: Get a specific transaction by ID
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
          example: 679fff6e2dd7df11b3a089b1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /api/transaction/{transactionId}/payment:
    post:
      tags:
        - transaction
      summary: Make payment for a transaction
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
          example: 679fff6e2dd7df11b3a089b1
      responses:
        '200':
          description: Payment successful
          content:
            application/json: {}

  /api/transaction/{transactionId}:
    delete:
      tags:
        - transaction
      summary: Delete a transaction
      security:
        - BearerAuth: []  # Menjamin bahwa security tetap terpakai pada endpoint ini
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
          example: 678e7c7da5daee71bdf879e4
      responses:
        '200':
          description: Transaction deleted successfully
          content:
            application/json: {}